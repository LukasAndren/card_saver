package com.card_saver.service.impl;

import com.card_saver.model.User;

import com.card_saver.service.IUserService;

import com.card_saver.repository.UserRepository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Handles services that results in/require users.
 */
@Service
public class UserService implements IUserService {

    @Autowired
    UserRepository userRepository;

    /**
     * Checks whether the User (username/password combination) is contained in the database.
     * If the User exists, it fetches the User's id from the database,
     * and sets it onto the parameter User's id.
     * If the User does not exist, it sets the parameter User's id to -1 (this means there
     * was an error and is a flag that the controller checks for).
     *
     * @param user - The user object that was submitted by the login form.
     */
    @Override
    public void handleLogin(User user) {
        if (userRepository.userExists(user)) {
            user.setId(userRepository.getUserId(user));

        } else {
            user.setId(-1);
        }
    }

    /**
     * Checks whether the parameter Users username is unique.
     * If it is, it saves the User to the database and updates it's
     * id to the one generated by the database. If it is not, it sets
     * the parameter User's id to -1 (this means there was an error
     * and is a flag that the controller checks for).
     *
     * @param user - The User object that was submitted by the create account form.
     */
    @Override
    public void createAccount(User user) {
        if (!userRepository.usernameIsUnique(user)) {
            user.setId(-1);
        } else {
            userRepository.createUser(user);
        }
    }
}
